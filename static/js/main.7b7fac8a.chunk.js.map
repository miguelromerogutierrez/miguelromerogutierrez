{"version":3,"sources":["components/input-stream.tsx","components/console-line.tsx","components/log-line.tsx","components/console.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputStream","activeLine","onCommandSubmit","defaultText","inputRef","useRef","useState","inputStreamState","setInputStream","useEffect","focusInput","current","focus","window","addEventListener","removeEventListener","className","onSubmit","event","preventDefault","ref","onChange","currentTarget","value","ConsoleLine","text","href","target","rel","LogLine","HelpRow","command","description","useCommandLine","type","active","commandLines","setCommandLines","argv","logLines","split","args","parseCommand","push","map","cl","Console","commandLine","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b7fac8a.chunk.js","sourcesContent":["import React, { FormEvent, useEffect, useRef, useState } from 'react';\n\ntype InputStreamProps = {\n  activeLine: boolean;\n  onCommandSubmit: (command: string) => void;\n  defaultText?: string;\n};\n\nconst InputStream = ({ activeLine, onCommandSubmit, defaultText = '' }: InputStreamProps) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [inputStreamState, setInputStream] = useState(defaultText);\n\n  const changeInputStream = (event: FormEvent<HTMLInputElement>) => {\n    setInputStream(event.currentTarget.value);\n  }\n  const handleCommandSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (activeLine) onCommandSubmit(inputStreamState);\n  };\n\n  useEffect(() => {\n    const focusInput = () => {\n        inputRef.current?.focus();\n      };\n    \n    if (activeLine) {\n      focusInput();\n      window.addEventListener('click', focusInput);\n    }\n\n    return () => {\n      window.removeEventListener('click', focusInput);\n    }\n  }, [activeLine])\n\n  return (\n    <span className=\"text-stream-color ff-roboto\">\n      <form className=\"dil\" onSubmit={handleCommandSubmit}>\n        <input className=\"w0 bw0 pa0\" ref={inputRef} onChange={changeInputStream} />{' '}\n      </form>\n      <span>{inputStreamState}{activeLine && '█'}</span>\n    </span>\n  );\n};\n\nexport default InputStream;\n","import React from 'react';\nimport InputStream from './input-stream';\n\ntype ConsoleLineProps = {\n  onCommandSubmit(command: string): void;\n  activeLine: boolean;\n  text?: string;\n}\n\nconst ConsoleLine = ({onCommandSubmit, activeLine, text}: ConsoleLineProps) => {\n  return (\n    <div className=\"text-stream-color f5\">\n      <span className=\"ff-caveat cyan\">Resume<a className=\"green magenta-hover no-underline\" href=\"https://github.com/miguelromerogutierrez\" target='_blank' rel=\"noreferrer\">@miguelromerogutierrez</a></span>{' '}\n      <InputStream activeLine={activeLine} onCommandSubmit={onCommandSubmit} defaultText={text} />\n    </div>\n  )\n};\n\nexport default ConsoleLine;\n","import React, { ReactNode } from 'react';\n\ntype LogLineProps = {\n  text?: ReactNode;\n}\n\nconst LogLine = ({text}: LogLineProps) => {\n  return (\n    <div className=\"text-stream-color ff-roboto f5\">\n      {text}\n    </div>\n  )\n};\n\nexport default LogLine;\n","import React, { ReactNode, useState } from 'react';\nimport ConsoleLine from './console-line';\nimport LogLine from './log-line';\n\ntype CommandLineState = {\n  text: ReactNode;\n  type: 'LOG'\n} | {\n  text: string;\n  type: 'COMMAND',\n  active: boolean;\n};\n\nconst parseCommand = (argv: string) => {\n  const [command, ...args] = argv.split(' ');\n  return {\n    command,\n    args \n  };\n}\n\nconst HelpRow = ({command, description}: {command: string, description: string}) => (\n  <div className=\"df\">\n    <span className=\"db wc1\">{command}</span>\n    <span>{description}</span>\n  </div>\n)\n\nconst getHelpLines = ():CommandLineState[] => ([\n  { type: 'LOG', text: <HelpRow command=\"aboutme\" description=\"Know what are my interests, where i have been worked, what is my background knowledge.\" /> },\n  { type: 'LOG', text: <HelpRow command=\"skills\" description=\"Know the technologies that i can perform and what soft skills i have.\" /> },\n  { type: 'LOG', text: <HelpRow command=\"experience\" description=\"Know where i've been working recently.\" /> },\n  { type: 'LOG', text: <HelpRow command=\"contactme\" description=\"Start chatting with me and keep in touch on my social medias.\" /> },\n  { type: 'LOG', text: <HelpRow command=\"posts\" description=\"Look at my blog posts, for sure you will find something to learn.\" /> },\n  { type: 'LOG', text: <HelpRow command=\"clear\" description=\"Clear the command line.\" /> },\n]);\nconst getAboutMeLines = (): CommandLineState[] => ([\n  {\n    type: 'LOG', text: <>\n      <h1>Miguel Ángel Romero Gutiérrez</h1>\n    </>\n  },\n  {\n    type: 'LOG', text: <>\n      <h2>Principal Software Engineering at Globant.</h2>\n    </>\n  },\n  {\n    type: 'LOG', text: <>\n      <p>\n        Miguel is an efficient developer, has a strong knowledge of javascript language and web development from DB,Backend Services and Front end development.\n        The principal frameworks that him works are: React, NodeJS, Webpack, Gulp, Handlebars, Typescript. He feels secure with any challange about web programming,\n        the major project that he has been worked was Cars.com, one of the biggest web page in America that offers a marketplace that creates connections between cars sellers and buyers.\n        In that proyect Miguel developed the web app <span className=\"magenta\">\"turbo cars\"</span> that offers a search of used cars and the connection with the dealer. The proyect contains a Server Rendering\n        technique that offers SEO and an Angular client that performs funcionality to the web components.\n      </p>\n    </>\n  }\n]);\nconst getExperienceLines = (): CommandLineState[] => ([\n  {\n    type: 'LOG', text: <>\n      <p>\n        I develop Web UI experiences using recents frameworks.\n      </p>\n      <p className=\"f6\">\n        Latest Projects:\n      </p>\n      <p>\n        July 2019 - 2020\n      </p>\n      <p>\n        <b><a className=\"green magenta-hover no-underline\" href=\"https://www.lendingclub.com/\" target=\"_blank\" rel=\"noreferrer\">LendingClub.</a></b> Lending club is a peer to peer lending company. I help them to develop new Web UI experiences for Borrowers with Personal Loans.\n      </p>\n\n      <p>\n        January 2021 - Present\n      </p>\n      <p>\n        <b><a className=\"green magenta-hover no-underline\" href=\"https://www.missionlane.com/\" target=\"_blank\" rel=\"noreferrer\">MissionLane.</a></b> MissionLane is a company that provide credit cards to customer with low credit history. I worked on develop new customer ui experiences, integrating flows with microservices and third parties services like tracking tools, a/b testing.\n      </p>\n    </>\n  }\n]);\nconst getContactMeLines = (): CommandLineState[] => ([\n  {\n    type: 'LOG',\n    text: <>\n      <p>LinkedIn: <a className=\"green magenta-hover\" href=\"https://www.linkedin.com/in/miguelromerogutierrez85\" target=\"_blank\" rel=\"noreferrer\">@miguelromerogutierrez85</a></p>\n      <p>Github: <a className=\"green magenta-hover\" href=\"https://github.com/miguelromerogutierrez/\" target=\"_blank\" rel=\"noreferrer\">@miguelromerogutierrez</a></p>\n      <p>Email: <a className=\"green magenta-hover\" href=\"mailto:miguel.angel.romero.gtz@gmail.com\" target=\"_blank\" rel=\"noreferrer\">miguel.angel.romero.gtz@gmail.com</a></p>\n      <p>Twitter: <a className=\"green magenta-hover\" href=\"https://twitter.com/Maikesuun\" target=\"_blank\" rel=\"noreferrer\">@Maikesuun</a></p>\n      <p>Phone: <a className=\"green magenta-hover\" href=\"tel:5552994678\" target=\"_blank\" rel=\"noreferrer\">5552994678</a></p>\n    </>\n  }\n]);\nconst getSkillsLines = (): CommandLineState[] => ([\n  { type: 'LOG', text: <>\n    <p>Skills i can teach:</p>\n    <ul>\n      <li>Javascript</li>\n      <li>React</li>\n      <li>Typescript</li>\n      <li>Programming Patterns</li>\n      <li>Programming Principles</li>\n      <li>Css styles</li>\n      <li>Search optimization</li>\n      <li>Leadership</li>\n      <li>Clear thinker</li>\n      <li>Focus</li>\n      <li>Self-taught</li>\n    </ul>\n    <p>Skills i can perform:</p>\n    <ul>\n      <li>Express</li>\n      <li>Kotlin</li>\n      <li>Bundlers</li>\n    </ul>\n  </>}\n]);\nconst getPostsLines = (): CommandLineState[] => ([\n  { type: 'LOG', text: <>\n    <a className=\"no-underline green magenta-hover\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/posts/miguelromerogutierrez85_the-toggle-component-activity-6772894764451921920-S5r3\">React: The toggle component</a>\n    <br/>\n    <a className=\"no-underline green magenta-hover\" target=\"_blank\" rel=\"noreferrer\" href=\"https://www.linkedin.com/posts/miguelromerogutierrez85_the-state-machine-activity-6775452384513683459-kXSv\">React: The State Machine</a>\n    <br/>\n    <a className=\"no-underline green magenta-hover\" target=\"_blank\" rel=\"noreferrer\" href=\"https://dev.to/miguelromerogutierrez/react-hooks-intermedian-usestateform-4651\">React hooks: useStateForm</a>\n    <br/>\n    <a className=\"no-underline green magenta-hover\" target=\"_blank\" rel=\"noreferrer\" href=\"https://iscmike.notion.site/Animation-Component-39d1052fb50245ea86835e6a14fcf80f\">React: The animation component</a>\n    <br/>\n    <a className=\"no-underline green magenta-hover\" target=\"_blank\" rel=\"noreferrer\" href=\"https://medium.com/@miguel.angel.romero.gtz/apuntes-de-react-patrones-hoc-88e272e770c7\">React: The High Order Components</a>\n  </>}\n]);\n\nconst useCommandLine = () => {\n  const [commandLines, setCommandLines] = useState<CommandLineState[]>([\n    { text: 'Type help or -h to know the commands', type: 'LOG' },\n    { active: true, text: '', type: 'COMMAND' },\n  ]);\n  \n  const onCommandSubmit = (argv: string) => {\n    const logLines: CommandLineState[] = [];\n    const {command} = parseCommand(argv);\n    switch(command) {\n      case '-h':\n      case 'help':\n        logLines.push(...getHelpLines());\n        break;\n      case '-a':\n      case 'aboutme':\n        logLines.push(...getAboutMeLines());\n        break;\n      case 'skills':\n        logLines.push(...getSkillsLines());\n        break;\n      case 'experience':\n        logLines.push(...getExperienceLines())\n        break;\n      case 'contactme':\n        logLines.push(...getContactMeLines());\n        break;\n      case 'posts':\n        logLines.push(...getPostsLines());\n        break;\n      case 'clear':\n        setCommandLines([\n          { text: 'Type help or -h to know the commands', type: 'LOG' },\n          { type: 'COMMAND', active: true, text: '' }\n        ]);\n        return;\n      default:\n        logLines.push(\n          { text: `Command \"${command}\" not recognized`, type: 'LOG' }\n        );\n        break;\n    }\n\n    setCommandLines([\n      ...commandLines.map(cl => ({...cl, active: false})),\n      ...logLines,\n      { active: true, text: '', type: 'COMMAND'}\n    ]);\n  };\n\n  return { commandLines, onCommandSubmit };\n};\n\nconst Console = () => {\n  const {commandLines, onCommandSubmit} = useCommandLine();\n  return (\n    <div className=\"bg-console-color pa1 w-full h-full o-scroll\">\n      {commandLines.map((commandLine, index) => commandLine.type === 'LOG' \n        ? <LogLine key={`log-${index}`} text={commandLine.text} />\n        : <ConsoleLine key={`command-${index}-${commandLine.text}`} activeLine={commandLine.active} onCommandSubmit={onCommandSubmit} text={commandLine.text} />\n      )}\n    </div>\n  )\n};\n\nexport default Console;\n","import React from 'react';\nimport Console from './components/console';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Console />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}